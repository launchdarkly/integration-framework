{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://launchdarkly.com/schemas/v1.0/manifest.schema.json#",
  "title": "LaunchDarkly Integrations Manifest",
  "description": "Describes the capabilities and intent of a LaunchDarkly integration",
  "type": "object",
  "propertyNames": {
    "enum": [
      "name",
      "version",
      "overview",
      "description",
      "details",
      "author",
      "supportEmail",
      "links",
      "categories",
      "icons",
      "formVariables",
      "capabilities",
      "legacy",
      "otherCapabilities",
      "requiresOAuth",
      "hideOnIntegrationsPage",
      "oauthIntegrationKey"
    ]
  },
  "properties": {
    "name": {
      "$id": "#/properties/name",
      "title": "Integration name",
      "description": "Your integration's name.",
      "minLength": 3,
      "maxLength": 100,
      "type": "string"
    },
    "version": {
      "$id": "#/properties/version",
      "title": "Version",
      "description": "A semantic version of the integration. See https://semver.org for more info.",
      "examples": ["0.0.1", "1.0.0", "1.0.1-beta"],
      "type": "string",
      "minLength": 5,
      "maxLength": 14,
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
    },
    "overview": {
      "$id": "#/properties/overview",
      "title": "Short description",
      "description": "A short-one liner describing your integration",
      "type": "string",
      "minLength": 10,
      "maxLength": 100,
      "pattern": "^(.*)$"
    },
    "description": {
      "$id": "#/properties/description",
      "title": "Long description",
      "description": "A longer description of your integration",
      "type": "string",
      "minLength": 50,
      "maxLength": 2048,
      "pattern": "^(.*)$"
    },
    "details": {
      "#id": "#/properties/details",
      "title": "Learn more details",
      "description": "Details about your integration and next steps if the installation happens outside of LaunchDarkly",
      "type": "string",
      "minLength": 50,
      "maxLength": 2048,
      "pattern": "^(.*)$"
    },
    "author": {
      "$id": "#/properties/author",
      "title": "Author",
      "description": "Name of the author or organization responsible for the integration",
      "type": "string",
      "minLength": 3,
      "maxLength": 100,
      "pattern": "^(.*)$"
    },
    "supportEmail": {
      "$id": "#/properties/links/support-email",
      "title": "Support Email",
      "description": "Email address for your integration's support",
      "type": "string",
      "format": "email"
    },
    "links": {
      "$id": "#/properties/links",
      "title": "Links",
      "description": "A set of reference links supporting your integration",
      "type": "object",
      "propertyNames": {
        "enum": ["site", "launchdarklyDocs", "privacyPolicy", "supportWebsite"]
      },
      "properties": {
        "site": {
          "$id": "#/properties/links/site",
          "title": "Website",
          "description": "URL to your website",
          "type": "string",
          "maxLength": 2048,
          "pattern": "^[Hh][Tt][Tt][Pp][Ss]?://"
        },
        "launchdarklyDocs": {
          "$id": "#/properties/links/launchdarkly-docs",
          "title": "LaunchDarkly Documentation",
          "description": "URL to the LaunchDarkly documentation for this integration",
          "type": "string",
          "maxLength": 2048,
          "pattern": "^[Hh][Tt][Tt][Pp][Ss]?://"
        },
        "privacyPolicy": {
          "$id": "#/properties/links/privacy-policy",
          "title": "Privacy Policy",
          "description": "URL to your organization's privacy policy",
          "type": "string",
          "maxLength": 2048,
          "pattern": "^[Hh][Tt][Tt][Pp][Ss]?://"
        },
        "supportWebsite": {
          "$id": "#/properties/links/support-website",
          "title": "Support Website",
          "description": "URL to your integration's support website",
          "type": "string",
          "maxLength": 2048,
          "pattern": "^[Hh][Tt][Tt][Pp][Ss]?://"
        }
      },
      "required": ["site", "privacyPolicy"]
    },
    "categories": {
      "$id": "#/properties/categories",
      "title": "Categories",
      "description": "Categories that describe your integration",
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "maxItems": 3,
      "items": {
        "type": "string",
        "enum": [
          "analytics",
          "approval",
          "authentication",
          "automation",
          "big-segment-store",
          "code-references",
          "customer-support",
          "data",
          "developer-tools",
          "import",
          "infrastructure",
          "issue-tracking",
          "log-management",
          "messaging",
          "monitoring",
          "synced-segments",
          "notifications"
        ]
      }
    },
    "icons": {
      "$id": "#/properties/icons",
      "title": "Icons",
      "description": "Logos describing your integration in SVG format",
      "type": "object",
      "propertyNames": {
        "enum": ["square", "horizontal"]
      },
      "properties": {
        "square": {
          "$id": "#/properties/icons/square",
          "title": "Square logo",
          "description": "A square version of your integration's logo in SVG format",
          "type": "string",
          "pattern": "\\.svg$"
        },
        "horizontal": {
          "$id": "#/properties/icons/horizontal",
          "title": "Horizontal logo",
          "description": "A horizontal version of your integration's logo in SVG format",
          "type": "string",
          "pattern": "\\.svg$"
        }
      },
      "required": ["square", "horizontal"]
    },
    "legacy": {
      "$id": "#/properties/legacy",
      "title": "Legacy",
      "description": "Legacy integration",
      "type": "object",
      "propertyNames": {
        "enum": ["kind"]
      },
      "properties": {
        "kind": {
          "$id": "#/properties/legacy/kind",
          "title": "Kind",
          "description": "Kind of legacy integration",
          "type": "string",
          "enum": [
            "codeRefs",
            "datadog",
            "dataExport",
            "slackWebhooks",
            "webhooks"
          ]
        }
      },
      "required": ["kind"]
    },
    "otherCapabilities": {
      "$id": "#/properties/other-capabilities",
      "title": "Other capabilities",
      "description": "Capabilities not configured by manifests",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "enum": ["codeRefs", "dataExport", "external", "ide", "sso", "webhooks"]
      }
    },
    "requiresOAuth": {
      "$id": "#/properties/requires-oauth",
      "title": "Requires OAuth",
      "type": "boolean",
      "description": "Whether the integration authenticates using OAuth",
      "default": false
    },
    "hideOnIntegrationsPage": {
      "$id": "#/properties/hide-on-integrations-page",
      "title": "Hide On Integrations Page",
      "type": "boolean",
      "description": "Whether the your app should be excluded from the list of integration cards displayed on our integrations page in the web app",
      "default": false
    },
    "formVariables": {
      "$id": "#/properties/form-variables",
      "title": "Form variables",
      "description": "Form variables will be rendered on the integration configuration page. These are variables you need an admin to supply when they enable the integration. Examples of a form variable include `apiToken` or `url`.",
      "type": "array",
      "items": {
        "$ref": "schemas/definitions.json#/formVariable"
      },
      "default": []
    },
    "capabilities": {
      "$id": "#/properties/capabilities",
      "title": "Capabilities",
      "description": "Specify which capabilities you'd like your integration to have",
      "type": "object",
      "propertyNames": {
        "enum": [
          "auditLogEventsHook",
          "reservedCustomProperties",
          "trigger",
          "approval",
          "featureStore",
          "flagLink",
          "hideConfiguration",
          "externalConfigurationURL",
          "externalConfigurationPages",
          "syncedSegment",
          "bigSegmentStore"
        ]
      },
      "properties": {
        "auditLogEventsHook": {
          "$ref": "schemas/capabilities/auditLogEventsHook.json#/auditLogEventsHook"
        },
        "reservedCustomProperties": {
          "$ref": "schemas/capabilities/reservedCustomProperties.json#/reservedCustomProperties"
        },
        "trigger": {
          "$ref": "schemas/capabilities/trigger.json#/trigger"
        },
        "approval": {
          "$ref": "schemas/capabilities/approval.json#/approval"
        },
        "featureStore": {
          "$ref": "schemas/capabilities/featureStore.json#/featureStore"
        },
        "flagLink": {
          "$ref": "schemas/capabilities/flagLink.json#/flagLink"
        },
        "hideConfiguration": {
          "$ref": "schemas/capabilities/hideConfiguration.json#/hideConfiguration"
        },
        "externalConfigurationURL": {
          "$ref": "schemas/capabilities/externalConfiguration.json#/externalConfigurationURL"
        },
        "externalConfigurationPages": {
          "$ref": "schemas/capabilities/externalConfiguration.json#/externalConfigurationPages"
        },
        "syncedSegment": {
          "$ref": "schemas/capabilities/syncedSegment.json#/syncedSegment"
        },
        "bigSegmentStore": {
          "$ref": "schemas/capabilities/bigSegmentStore.json#/bigSegmentStore"
        }
      }
    },
    "oauthIntegrationKey": {
      "$id": "#/properties/oauth-integration-key",
      "title": "OAuth Integration Key",
      "description": "Unique key to be used to save and retrieve OAuth credentials used by your app. This is required if your app uses an OAuth flow.",
      "minLength": 3,
      "maxLength": 100,
      "type": "string"
    }
  },
  "required": [
    "name",
    "version",
    "overview",
    "description",
    "author",
    "supportEmail",
    "links",
    "categories",
    "icons"
  ]
}
